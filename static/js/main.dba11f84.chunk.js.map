{"version":3,"sources":["AddTask.js","Task.js","Tasklist.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","date","checked","handleText","e","setState","target","value","handleCheckbox","handleDate","handleAdd","length","alert","props","add","maxDate","this","class","className","type","placeholder","onChange","min","max","onClick","Component","Task","task","id","active","important","doneDate","finishDate","toLocaleString","done","remove","TaskList","tasks","filter","sort","a","b","activeTasks","map","doneTasks","App","counter","handleDone","forEach","getTime","handleRemove","index","findIndex","splice","addTask","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dba11f84.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0, 10);\r\n\r\n    state = {\r\n        text: \"\",\r\n        date: this.minDate,\r\n        checked: false\r\n    }\r\n\r\n    handleText = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCheckbox = (e) => {\r\n        this.setState({\r\n            checked: e.target.checked\r\n        })\r\n    }\r\n\r\n    handleDate = (e) => {\r\n        this.setState({\r\n            date: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAdd = () => {\r\n        const { text, date, checked } = this.state;\r\n        if (text.length < 2) return alert(\"task too short\")\r\n        const add = this.props.add(text, date, checked)\r\n        if (add) {\r\n            this.setState({\r\n                text: \"\",\r\n                date: this.minDate,\r\n                checked: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let maxDate = this.minDate.slice(0, 4) * 1 + 1;\r\n        maxDate = maxDate + \"-12-31\";\r\n\r\n        return (\r\n            <div class=\"jumbotron mb-4 mt-0\">\r\n                <div className=\"container pt-5\">\r\n                    <div className=\"row m-4 m-lg-0\">\r\n                        <h1 className=\"display-2 pt-5\">This is a To Do List</h1>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"\">\r\n                                <label className=\"mt-2\">Your task:</label>\r\n                                <input className=\"mt-2 form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"add task\"\r\n                                    value={this.state.text}\r\n                                    onChange={this.handleText}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt-2\">\r\n                                <label>Deadline:</label>\r\n                                <input className=\"mt-2 form-control\"\r\n                                    type=\"date\"\r\n                                    value={this.state.date}\r\n                                    min={this.minDate}\r\n                                    max={maxDate}\r\n                                    onChange={this.handleDate}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-check mt-2\">\r\n                                <label className=\"form-check-label\">Priority</label>\r\n                                <input className=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    checked={this.state.checked}\r\n                                    onChange={this.handleCheckbox}\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-lg btn-dark btn-primary mt-4\" onClick={this.handleAdd}>Add task</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n    const { text, date, id, active, important, doneDate } = props.task;\r\n\r\n    const finishDate = new Date(doneDate).toLocaleString()\r\n\r\n    if (active) {\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                    <h5>{important && \" PRIORITY: \"}{text}</h5>\r\n                    <p>until: {date}</p>\r\n                </div >\r\n                <div className=\"btn-group btn-group-sm\">\r\n                    <button className=\"btn btn-outline-dark\" onClick={() => props.done(id)}>Completed</button>\r\n                    <button className=\"btn btn-outline-dark\" onClick={() => props.remove(id)}>Delete</button>\r\n                </div>\r\n            </li >\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                    <h5>{text}</h5>\r\n                    <p>completed by {finishDate.slice(0, 17)}</p>\r\n                </div>\r\n                <button className=\"btn btn-sm btn-outline-dark\" onClick={() => props.remove(id)}>Delete</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n    done.sort((a, b) => b.doneDate - a.doneDate);\r\n\r\n    const activeTasks = active.map(task => <Task\r\n        key={task.id}\r\n        task={task}\r\n        done={props.done}\r\n        remove={props.remove}\r\n    />)\r\n\r\n    const doneTasks = done.map(task => <Task\r\n        key={task.id}\r\n        task={task}\r\n        done={props.done}\r\n        remove={props.remove}\r\n    />)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row m-4 m-lg-0 gx-4 gy-4\">\r\n                <div className=\"col-md-7\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h2 className=\"card-title display-6\">Remaining tasks: {active.length ? active.length : \"None!\"}</h2>\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {activeTasks}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h2 className=\"card-title display-6\">Completed: {done.length}</h2>\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {doneTasks.slice(0, 7)}\r\n                        </ul>\r\n                        {done.length > 7 && <div className=\"card-footer\"><h5 className=\"text-center\">...and {done.length - 5} more</h5></div>}\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './Tasklist';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  counter = 0\n  state = {\n    tasks: []\n  }\n\n  handleDone = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = !task.active;\n        task.doneDate = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks\n    })\n  }\n\n  handleRemove = (id) => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks\n    })\n  }\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text: text,\n      date: date,\n      important: important,\n      active: true,\n      doneDate: null\n    }\n    const tasks = [...this.state.tasks]\n    tasks.push(task);\n    this.setState({\n      tasks\n    })\n    this.counter++\n    return true\n  }\n\n  render() {\n    return (\n      <div>\n        <AddTask add={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          done={this.handleDone}\n          remove={this.handleRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}